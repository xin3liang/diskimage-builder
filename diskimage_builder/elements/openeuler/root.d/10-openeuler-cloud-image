#!/bin/bash

if [ ${DIB_DEBUG_TRACE:-0} -gt 0 ]; then
    set -x
fi
set -eu
set -o pipefail

if [[ ${DIB_RELEASE} < '21.03' ]]; then
    echo "Original cloud image release number less than 21.03, may not include tar."
    echo "which is required for this element!"
    echo "For this case, please use element 'openeuler-minimal' instead!!!"
    echo "Or, one can modify the image by adding tar and exporting"
    echo "DIB_LOCAL_IMAGE=/IMAGE-PATH/openEuler-XXXX-aarch64.qcow2 variable."
    echo "For how to modify image see: https://docs.openstack.org/image-guide/modify-images.html#mount-a-qcow2-image-without-lvm"
    echo "For more info see bug: https://gitee.com/openeuler/release-management/issues/I3A3HD"
    echo "Continue to run? Please enter yes or no (default no):"
    read confirm
    if [[ "$confirm" != "yes" ]];then
        echo "Exit now."
        exit 1
    fi
fi

[ -n "$ARCH" ]
[ -n "$TARGET_ROOT" ]

if [[ "amd64" == "$ARCH" ]]; then
    ARCH="x86_64"
elif [[ "arm64" == "$ARCH" ]]; then
    ARCH="aarch64"
fi

if [[ "$ARCH" =~ (aarch64|x86_64) ]]; then
    DIB_CLOUD_IMAGES=${DIB_CLOUD_IMAGES:-https://repo.openeuler.org/openEuler-${DIB_RELEASE}/virtual_machine_img/${ARCH}}
else
    echo 'openeuler root element only support the aarch64 and x86_64 arch now'
    exit 1
fi


DIB_LOCAL_IMAGE=${DIB_LOCAL_IMAGE:-}

if [ -n "$DIB_LOCAL_IMAGE" ]; then
    IMAGE_LOCATION=$DIB_LOCAL_IMAGE
    # No need to copy a local image into the cache directory, so just specify
    # the cached path as the original path.
    CACHED_IMAGE=$IMAGE_LOCATION
    BASE_IMAGE_FILE=$(basename $DIB_LOCAL_IMAGE)
    BASE_IMAGE_TAR=$BASE_IMAGE_FILE.tgz
else
    BASE_IMAGE_FILE=${BASE_IMAGE_FILE:-openEuler-${DIB_RELEASE}.${ARCH}.qcow2.xz}
    BASE_IMAGE_TAR=$BASE_IMAGE_FILE.tgz
    IMAGE_LOCATION=$DIB_CLOUD_IMAGES/$BASE_IMAGE_FILE
    CACHED_IMAGE=$DIB_IMAGE_CACHE/$BASE_IMAGE_FILE
fi

$TMP_HOOKS_PATH/bin/extract-image $BASE_IMAGE_FILE $BASE_IMAGE_TAR $IMAGE_LOCATION $CACHED_IMAGE
